Saga
CQRS
Correlation
Req/Resp

http://www.msaez.io/#/courses/assessment/running@sk9th/team/jinslee924@gmail.com

-----------------------------------------------------------
[로그인]

https://portal.azure.com
admin02@gkn2019hotmail.onmicrosoft.com
Skcc!234

1. 구독 > 종량제1 로 매핑 확인
2. 리소스그룹
   > 추가
     - 리소스그룹 : "admin02-rsrcgroup" <--- 각자 맞게
	 - 영역 : 한국 중부


#az login
admin02@gkn2019hotmail.onmicrosoft.com
Skcc!234
Skcc!2345


Azure 클러스터 생성
#az aks create --resource-group admin02-rsrcgroup --name admin02-cluster --node-count 2 --enable-addons monitoring --generate-ssh-keys

Azure 컨테이너 레지스트리 생성
#az acr create --resource-group admin02-rsrcgroup --name admin02 --sku Basic

Azure 컨테이너 레지스트리 로그인
#az acr login --name admin02

Azure 클러스터(AKS)에 레지스트리(ACR) 붙이기
#az aks update -n admin02-cluster -g admin02-rsrcgroup --attach-acr admin02

Azure 클러스터 토큰 가져오기
#az aks get-credentials --resource-group admin02-rsrcgroup --name admin02-cluster 


-----------------------------------------------------------
(네임스페이스 만들기)
#kubectl create ns phone82
#kubctl get ns
#kubectl get all -n phone82

(폴더 만들기)
#mkdir phone82
#cd phone82



-----------------------------------------------------------
[Deploy/ Pipeline]

(소스 가져오기)
#git clone https://github.com/phone82/app.git
#git clone https://github.com/phone82/pay.git
#git clone https://github.com/phone82/store.git
#git clone https://github.com/phone82/customer.git
#git clone https://github.com/phone82/gateway.git


(빌드하기)
#cd app
#mvn package -Dmaven.test.skip=true


(도커라이징 - Azure 레지스트리에 도커 이미지 푸시하기)
#az acr build --registry admin02 --image admin02.azurecr.io/app:latest .


(컨테이너라이징-디플로이 생성)
#kubectl create deploy app --image=admin02.azurecr.io/app:latest -n phone82
#kubectl get all -n phone82

(컨테이너라이징-서비스 생성)
#kubectl expose deploy app --type="ClusterIP" --port=8080 -n phone82

(상세확인)
#kubectl describe pod/app-fc5bd9ffc-p4fms -n phone82

(httpie 실행)
#kubectl exec -it httpie bin/bash 
>># http GET http://10.0.134.61:8080/orders



(배포)
#kubectl create deploy app --image=phone82/app:latest -n phone82
#kubectl get all -n phone82
#kubectl delete deploy app -n phone82  (삭제시)





-----------------------------------------------------------
[Gateway]
Gateway > application.yml


http GET http://localhost:8080/orders
http GET http://localhost:8080/payments
http GET http://localhost:8080/stores





-----------------------------------------------------------
[Circuit Breaker]
application.yml

hystrix:
  command:
    # 전역설정
    default:
      execution.isolation.thread.timeoutInMilliseconds: 610


(Payment) Payment.java (Entity)

    @PrePersist
    public void onPrePersist(){  //결제이력을 저장한 후 적당한 시간 끌기

        ...
        
        try {
                Thread.currentThread().sleep((long) (400 + Math.random() * 220));
                System.out.println("=============결재 승인 완료=============");
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
    }
	

#siege -c100 -t60S -r10 --content-type "application/json" 'http://localhost:8081/orders POST {"item": "iphone"}'



-----------------------------------------------------------
[Autoscale (HPA)]
#kubectl autoscale deploy pay --min=1 --max=10 --cpu-percent=15



#siege -c100 -t120S -r10 --content-type "application/json" 'http://localhost:8081/orders POST {"item": "chicken"}'


-----------------------------------------------------------
[Zero-downtime deploy (Readiness Probe)]


-----------------------------------------------------------
[Config Map/ Persistence Volume]


-----------------------------------------------------------
[Polyglot]


-----------------------------------------------------------
[Self-healing (Liveness Probe)]







